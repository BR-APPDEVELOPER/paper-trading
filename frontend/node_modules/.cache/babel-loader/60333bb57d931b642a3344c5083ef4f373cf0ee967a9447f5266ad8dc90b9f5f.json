{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Projects\\\\PaperTrading\\\\frontend\\\\src\\\\components\\\\Positions.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../css/positions.css';\nimport axios from 'axios';\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\"); // Replace with your server URL\n\nconst Positions = ({\n  title,\n  selectedStock,\n  getPositions,\n  positions\n}) => {\n  _s();\n  //const [positions, setPositions] = useState([]);\n  const [data, setSymbolData] = useState([]);\n  const user = JSON.parse(sessionStorage.getItem(\"user\"));\n  const [orders, setOrders] = useState([]);\n\n  // useEffect(()=>{\n  //     console.log(\"executed\", orders);\n  //     alert(orders.stockSymbol + \"Order Executed..\");\n  // },[orders]);\n\n  useEffect(() => {\n    // Listen for 'orderUpdated' event\n    socket.on(\"orderUpdated\", data => {\n      setOrders(data);\n      user.balance = data === null || data === void 0 ? void 0 : data.balance;\n      sessionStorage.setItem(\"user\", JSON.stringify(user));\n      alert(data.stockSymbol + \" \" + data.status);\n    });\n    return () => {\n      socket.off(\"orderUpdated\"); // Cleanup event listener\n    };\n  }, []);\n  const updateBalance = async balance => {\n    try {\n      const res = await axios.patch(`${process.env.REACT_APP_WEB_URL}/api/users/${user._id}`, {\n        balance\n      });\n    } catch (error) {}\n  };\n  const fetchStockCurrentPrice = async symbol => {\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_WEB_URL}/api/stock/${symbol}`);\n      const chartData = response.data.chart.result[0];\n      setSymbolData(chartData.meta);\n      if (!chartData || !chartData.timestamp || !chartData.indicators.quote[0]) {\n        console.error(\"Invalid stock data received.\");\n        return;\n      }\n    } catch (error) {\n      console.error(\"Error fetching stock data:\", error);\n    }\n  };\n  const handleSell = async symbol => {\n    try {\n      console.log(\"3\", symbol);\n      const response = await axios.post('http://localhost:5000/api/position/sell', {\n        userId: user._id,\n        // Replace with actual user ID\n        stockSymbol: symbol,\n        sellPrice: Number(data.regularMarketPrice),\n        marketPrice: Number(data.regularMarketPrice)\n      });\n      alert(response.data.message);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  // ✅ Remove Stock from Watchlist\n  async function cancelOrder(id, price, qty, status, symbol) {\n    if (status === \"executed\") {\n      console.log(\"1\", symbol);\n      var c = 1;\n      do {\n        // Wait for data to be fetched and updated\n        await fetchStockCurrentPrice(symbol);\n\n        // Wait for a short delay to ensure data updates\n        await new Promise(resolve => setTimeout(resolve, 500));\n        if (data.length !== 0) {\n          break;\n        }\n        if (c === 10) {\n          alert(\"Warning: Problem in Selling. Try again\");\n          return;\n        }\n        c = c + 1;\n      } while (true); // This ensures we exit the loop when data is valid\n\n      await handleSell(symbol);\n      getPositions();\n    } else {\n      console.log(\"2\", symbol);\n      try {\n        const res = await axios.delete(`${process.env.REACT_APP_WEB_URL}/api/position/remove/${id}`);\n        if (res.data.success) {\n          user.balance = user.balance + price * qty;\n          sessionStorage.setItem(\"user\", JSON.stringify(user));\n          updateBalance(user.balance);\n          getPositions();\n          alert(res.data.message);\n        }\n      } catch (error) {\n        console.error('Error removing stock:', error);\n      }\n    }\n  }\n  ;\n  useEffect(() => {\n    getPositions();\n  }, [positions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"positions\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"positions-data\",\n      children: positions.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: positions.map((position, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: position.status === 'executed' ? \"position-item executed-color\" : \"position-item pending-color\",\n          onClick: () => selectedStock(position.stockSymbol),\n          children: [position.stockSymbol, /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"status\",\n            children: position.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: position.status === 'executed' ? \"btn-executed-color\" : \"btn-pending-color\",\n            onClick: () => cancelOrder(position._id, position.buyPrice, position.quantity, position.status, position.stockSymbol),\n            children: [\" \", position.status === 'executed' ? \"Sell\" : \"Cancel\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 37\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 37\n        }, this))\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No positions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n};\n_s(Positions, \"ceGun4uR5BH6L8kG2v45tlFlgDk=\");\n_c = Positions;\nexport default Positions;\nvar _c;\n$RefreshReg$(_c, \"Positions\");","map":{"version":3,"names":["React","useEffect","useState","axios","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","Positions","title","selectedStock","getPositions","positions","_s","data","setSymbolData","user","JSON","parse","sessionStorage","getItem","orders","setOrders","on","balance","setItem","stringify","alert","stockSymbol","status","off","updateBalance","res","patch","process","env","REACT_APP_WEB_URL","_id","error","fetchStockCurrentPrice","symbol","response","get","chartData","chart","result","meta","timestamp","indicators","quote","console","handleSell","log","post","userId","sellPrice","Number","regularMarketPrice","marketPrice","message","cancelOrder","id","price","qty","c","Promise","resolve","setTimeout","length","delete","success","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","position","index","onClick","buyPrice","quantity","_c","$RefreshReg$"],"sources":["D:/React_Projects/PaperTrading/frontend/src/components/Positions.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../css/positions.css';\r\nimport axios from 'axios';\r\nimport io from \"socket.io-client\";\r\n\r\nconst socket = io(\"http://localhost:5000\"); // Replace with your server URL\r\n\r\nconst Positions = ({ title, selectedStock, getPositions, positions }) => {\r\n    //const [positions, setPositions] = useState([]);\r\n    const [data, setSymbolData] = useState([]);\r\n    const user = JSON.parse(sessionStorage.getItem(\"user\"));\r\n    const [orders, setOrders] = useState([]);\r\n\r\n    // useEffect(()=>{\r\n    //     console.log(\"executed\", orders);\r\n    //     alert(orders.stockSymbol + \"Order Executed..\");\r\n    // },[orders]);\r\n\r\n    useEffect(() => {\r\n        // Listen for 'orderUpdated' event\r\n        socket.on(\"orderUpdated\", (data) => {\r\n            setOrders(data);\r\n            user.balance = data?.balance;\r\n            sessionStorage.setItem(\"user\", JSON.stringify(user));\r\n            alert(data.stockSymbol + \" \" + data.status);\r\n        });\r\n\r\n\r\n        return () => {\r\n            socket.off(\"orderUpdated\"); // Cleanup event listener\r\n        };\r\n    }, []);\r\n\r\n\r\n    const updateBalance = async (balance) => {\r\n        try {\r\n            const res = await axios.patch(`${process.env.REACT_APP_WEB_URL}/api/users/${user._id}`, {\r\n                balance\r\n            });\r\n        } catch (error) {\r\n\r\n        }\r\n    };\r\n\r\n    const fetchStockCurrentPrice = async (symbol) => {\r\n\r\n        try {\r\n            const response = await axios.get(`${process.env.REACT_APP_WEB_URL}/api/stock/${symbol}`);\r\n            const chartData = response.data.chart.result[0];\r\n\r\n            setSymbolData(chartData.meta);\r\n\r\n            if (!chartData || !chartData.timestamp || !chartData.indicators.quote[0]) {\r\n                console.error(\"Invalid stock data received.\");\r\n                return;\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching stock data:\", error);\r\n        }\r\n    };\r\n\r\n    const handleSell = async (symbol) => {\r\n        try {\r\n            console.log(\"3\", symbol);\r\n            const response = await axios.post('http://localhost:5000/api/position/sell', {\r\n                userId: user._id, // Replace with actual user ID\r\n                stockSymbol: symbol,\r\n                sellPrice: Number(data.regularMarketPrice),\r\n                marketPrice: Number(data.regularMarketPrice)\r\n            });\r\n\r\n            alert(response.data.message);\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    };\r\n\r\n\r\n    // ✅ Remove Stock from Watchlist\r\n    async function cancelOrder(id, price, qty, status, symbol) {\r\n\r\n        if (status === \"executed\") {\r\n            console.log(\"1\", symbol);\r\n            var c = 1;\r\n\r\n            do {\r\n                // Wait for data to be fetched and updated\r\n                await fetchStockCurrentPrice(symbol);\r\n\r\n                // Wait for a short delay to ensure data updates\r\n                await new Promise(resolve => setTimeout(resolve, 500));\r\n\r\n                if(data.length !== 0){\r\n                    break;\r\n                }\r\n\r\n                if (c === 10) {\r\n                    alert(\"Warning: Problem in Selling. Try again\");\r\n                    return;\r\n                }\r\n\r\n                c=c+1;\r\n\r\n            } while (true); // This ensures we exit the loop when data is valid\r\n\r\n\r\n            await handleSell(symbol);\r\n            getPositions();\r\n\r\n        } else {\r\n            console.log(\"2\", symbol);\r\n            try {\r\n                const res = await axios.delete(`${process.env.REACT_APP_WEB_URL}/api/position/remove/${id}`);\r\n\r\n                if (res.data.success) {\r\n                    user.balance = user.balance + (price * qty);\r\n                    sessionStorage.setItem(\"user\", JSON.stringify(user));\r\n                    updateBalance(user.balance);\r\n                    getPositions();\r\n                    alert(res.data.message);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error removing stock:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getPositions();\r\n    }, [positions]);\r\n\r\n\r\n    return (\r\n        <div className=\"positions\">\r\n            <h2>{title}</h2>\r\n            {/* Example stock items */}\r\n            <div className='positions-data'>\r\n                {positions.length > 0 ?\r\n                    <>\r\n                        {\r\n                            positions.map((position, index) => (\r\n                                    <div key={index} className={position.status === 'executed' ? \"position-item executed-color\" : \"position-item pending-color\"} onClick={() => selectedStock(position.stockSymbol)}>\r\n                                    \r\n                                    {position.stockSymbol}\r\n                                    <label className='status'>{position.status}</label>\r\n                                    <button className={position.status === 'executed' ? \"btn-executed-color\" : \"btn-pending-color\"} onClick={() => cancelOrder(position._id, position.buyPrice, position.quantity, position.status, position.stockSymbol)}> {position.status === 'executed' ? \"Sell\" : \"Cancel\"}</button>\r\n                                    \r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </>\r\n                    : <p>No positions</p>}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Positions;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}